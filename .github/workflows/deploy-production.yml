name: 部署到生产环境

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      confirm:
        description: '确认部署到生产环境？'
        required: true
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.confirm == 'true'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: 安装pnpm
        run: npm install -g pnpm
      
      - name: 验证后端环境配置
        run: |
          cd backend
          pip install -r requirements.txt
          python check_env.py --env-file .env.production
      
      - name: 前端构建
        run: |
          cd frontend
          pnpm install --frozen-lockfile
          pnpm build:production
      
      - name: 创建部署包
        run: |
          mkdir -p deploy
          cp -r backend deploy/
          cp -r frontend/dist deploy/frontend-dist
          tar -czf production-deploy.tar.gz deploy
      
      - name: 部署到服务器
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_SSH_PORT }}
          source: "production-deploy.tar.gz"
          target: "/tmp"
      
      - name: 在服务器上执行部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_SSH_PORT }}
          script: |
            # 解压部署包
            mkdir -p /tmp/production-deploy
            tar -xzf /tmp/production-deploy.tar.gz -C /tmp/production-deploy
            
            # 部署后端
            sudo rsync -av --delete /tmp/production-deploy/deploy/backend/ /opt/app/backend/
            cd /opt/app/backend
            python3 -m venv .venv
            source .venv/bin/activate
            pip install -r requirements.txt
            pip install gunicorn
            
            # 应用数据库迁移
            export ENV=production
            python -m alembic upgrade head
            
            # 部署前端
            sudo rsync -av --delete /tmp/production-deploy/deploy/frontend-dist/ /var/www/html/app/
            
            # 重启服务
            sudo systemctl restart fastapi-app
            
            # 清理临时文件
            rm -rf /tmp/production-deploy /tmp/production-deploy.tar.gz
      
      - name: 创建发布标签
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: 发布 ${{ github.ref_name }}
          body: |
            ## 版本 ${{ github.ref_name }} 已成功部署到生产环境
            
            部署时间: ${{ github.event.repository.updated_at }}
            提交: ${{ github.sha }}
          draft: false
          prerelease: false 